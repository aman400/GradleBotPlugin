/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'maven'
apply plugin: 'signing'

def groupId = "com.gradlebot"
def artifactId = "plugin"
def version = "1.0"

def localReleaseDest = "/Users/aman/Desktop/GradleBot"

def isReleaseBuild() {
    return !VERSION_NAME.contains("SNAPSHOT")
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : ""
}


uploadArchives {
    repositories {
        mavenDeployer {
            pom.groupId = groupId
            pom.artifactId = artifactId
            pom.version = version

            pom.project {
                name 'GradleBot'
                packaging 'jar'
                description 'Gradle slack bot pulgin'
            }

            // Add other pom properties here if you want (developer details / licenses)
            repository(url: "file://${localReleaseDest}")
            snapshotRepository(url: "file://${localReleaseDest}")
        }
    }
}

task generateRelease {
    doFirst {
        println "Generating Release ${version}"
    }
}

generateRelease.dependsOn(uploadArchives)
